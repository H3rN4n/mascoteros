"use strict";var ApplicationConfiguration=function(){var applicationModuleName="angleApp",applicationModuleVendorDependencies=["ngRoute","ngAnimate","ngStorage","ngTouch","ngCookies","pascalprecht.translate","ui.bootstrap","ui.router","restangular","oc.lazyLoad","cfp.loadingBar","ngSanitize","ngResource","ui.utils","ui.checkbox","imageuploaders","ngStorage","petgenres","pettypes","angularMoment","djds4rce.angular-socialshare","geolocation","textAngular","uiGmapgoogle-maps"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("articles"),ApplicationConfiguration.registerModule("comments"),ApplicationConfiguration.registerModule("contacts"),ApplicationConfiguration.registerModule("core"),angular.module("core").run(["$rootScope","$state","$stateParams","$window","$templateCache",function($rootScope,$state,$stateParams,$window){$rootScope.$state=$state,$rootScope.$stateParams=$stateParams,$rootScope.$storage=$window.localStorage,$rootScope.app={name:"Mascoteros",description:"Somos amigos de las mascotas",year:(new Date).getFullYear(),layout:{isFixed:!0,isCollapsed:!1,isBoxed:!1,isRTL:!1,horizontal:!1,isFloat:!1,asideHover:!1},useFullLayout:!1,hiddenFooter:!1,viewAnimation:"ng-fadeInUp"},$rootScope.user={name:"John",job:"ng-Dev",picture:"app/img/user/02.jpg"}}]),ApplicationConfiguration.registerModule("events"),ApplicationConfiguration.registerModule("faqs"),ApplicationConfiguration.registerModule("imageuploaders"),ApplicationConfiguration.registerModule("issues"),ApplicationConfiguration.registerModule("notifications"),ApplicationConfiguration.registerModule("petgenres"),ApplicationConfiguration.registerModule("pets"),ApplicationConfiguration.registerModule("pettypes"),ApplicationConfiguration.registerModule("rescues"),ApplicationConfiguration.registerModule("roles"),ApplicationConfiguration.registerModule("shelters"),ApplicationConfiguration.registerModule("shops"),ApplicationConfiguration.registerModule("trainers"),ApplicationConfiguration.registerModule("users"),ApplicationConfiguration.registerModule("vets"),angular.module("articles").config(["$stateProvider",function($stateProvider){$stateProvider.state("app.listArticles",{url:"/articles",templateUrl:"modules/articles/views/list-articles.client.view.html"}).state("app.createArticle",{url:"/articles/create",templateUrl:"modules/articles/views/create-article.client.view.html"}).state("app.viewArticle",{url:"/articles/:articleId",templateUrl:"modules/articles/views/view-article.client.view.html",controller:"ArticlesController"}).state("app.editArticle",{url:"/articles/:articleId/edit",templateUrl:"modules/articles/views/edit-article.client.view.html"})}]),angular.module("articles").controller("ArticlesController",["$scope","$stateParams","$location","Authentication","Articles",function($scope,$stateParams,$location,Authentication,Articles){$scope.authentication=Authentication,$scope.create=function(){var article=new Articles({title:this.title,content:this.content});article.$save(function(response){$location.path("articles/"+response._id),$scope.title="",$scope.content=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(article){if(article){article.$remove();for(var i in $scope.articles)$scope.articles[i]===article&&$scope.articles.splice(i,1)}else $scope.article.$remove(function(){$location.path("articles")})},$scope.update=function(){var article=$scope.article;article.$update(function(){$location.path("articles/"+article._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.articles=Articles.query()},$scope.findOne=function(){$scope.article=Articles.get({articleId:$stateParams.articleId})}}]),angular.module("articles").factory("Articles",["$resource",function($resource){return $resource("articles/:articleId",{articleId:"@_id"},{update:{method:"PUT"}})}]),angular.module("comments").config(["$stateProvider",function($stateProvider){$stateProvider.state("listComments",{url:"/comments",templateUrl:"modules/comments/views/list-comments.client.view.html"}).state("createComment",{url:"/comments/create",templateUrl:"modules/comments/views/create-comment.client.view.html"}).state("viewComment",{url:"/comments/:commentId",templateUrl:"modules/comments/views/view-comment.client.view.html"}).state("editComment",{url:"/comments/:commentId/edit",templateUrl:"modules/comments/views/edit-comment.client.view.html"})}]),angular.module("comments").controller("CommentsController",["$scope","$stateParams","$location","Authentication","Comments",function($scope,$stateParams,$location,Authentication,Comments){$scope.authentication=Authentication,$scope.create=function(){var comment=new Comments({name:this.name});comment.$save(function(response){$location.path("comments/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(comment){if(comment){comment.$remove();for(var i in $scope.comments)$scope.comments[i]===comment&&$scope.comments.splice(i,1)}else $scope.comment.$remove(function(){$location.path("comments")})},$scope.update=function(){var comment=$scope.comment;comment.$update(function(){$location.path("comments/"+comment._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.comments=Comments.query()},$scope.findOne=function(){$scope.comment=Comments.get({commentId:$stateParams.commentId})}}]),angular.module("comments").factory("Comments",["$resource",function($resource){return $resource("comments/:commentId",{commentId:"@_id"},{update:{method:"PUT"}})}]),angular.module("contacts").config(["$stateProvider",function($stateProvider){$stateProvider.state("app.listContacts",{url:"/contacts",templateUrl:"modules/contacts/views/list-contacts.client.view.html"}).state("app.createContact",{url:"/contacts/create",templateUrl:"modules/contacts/views/create-contact.client.view.html"}).state("app.viewContact",{url:"/contacts/:contactId",templateUrl:"modules/contacts/views/view-contact.client.view.html"}).state("app.editContact",{url:"/contacts/:contactId/edit",templateUrl:"modules/contacts/views/edit-contact.client.view.html"})}]),angular.module("contacts").controller("ContactsController",["$scope","$stateParams","$location","Authentication","Contacts",function($scope,$stateParams,$location,Authentication,Contacts){$scope.authentication=Authentication,$scope.create=function(){var contact=new Contacts({name:this.name,role:this.role,tel:this.tel,email:this.email});contact.$save(function(response){$location.path("contacts/"+response._id),$scope.name="",$scope.role="",$scope.tel="",$scope.email=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(contact){if(contact){contact.$remove();for(var i in $scope.contacts)$scope.contacts[i]===contact&&$scope.contacts.splice(i,1)}else $scope.contact.$remove(function(){$location.path("contacts")})},$scope.update=function(){var contact=$scope.contact;contact.$update(function(){$location.path("contacts/"+contact._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.contacts=Contacts.query()},$scope.findOne=function(){$scope.contact=Contacts.get({contactId:$stateParams.contactId})}}]),angular.module("contacts").factory("Contacts",["$resource",function($resource){return $resource("contacts/:contactId",{contactId:"@_id"},{update:{method:"PUT"}})}]),angular.module("core").run(["Menus",function(Menus){Menus.addMenuItem("sidebar","Inicio","home",null,"/home",!0,null,null,"icon-home")}]).config(["$ocLazyLoadProvider","APP_REQUIRES",function($ocLazyLoadProvider,APP_REQUIRES){$ocLazyLoadProvider.config({debug:!1,events:!0,modules:APP_REQUIRES.modules})}]).config(["$controllerProvider","$compileProvider","$filterProvider","$provide",function($controllerProvider,$compileProvider,$filterProvider,$provide){angular.module("core").controller=$controllerProvider.register,angular.module("core").directive=$compileProvider.directive,angular.module("core").filter=$filterProvider.register,angular.module("core").factory=$provide.factory,angular.module("core").service=$provide.service,angular.module("core").constant=$provide.constant,angular.module("core").value=$provide.value}]).config(["$translateProvider",function($translateProvider){$translateProvider.useStaticFilesLoader({prefix:"modules/core/i18n/",suffix:".json"}),$translateProvider.preferredLanguage("en"),$translateProvider.useLocalStorage()}]).config(["cfpLoadingBarProvider",function(cfpLoadingBarProvider){cfpLoadingBarProvider.includeBar=!0,cfpLoadingBarProvider.includeSpinner=!1,cfpLoadingBarProvider.latencyThreshold=500,cfpLoadingBarProvider.parentSelector=".wrapper > section"}]).config(["$locationProvider",function($locationProvider){$locationProvider.html5Mode(!0).hashPrefix("!")}]).config(["uiGmapGoogleMapApiProvider",function(uiGmapGoogleMapApiProvider){uiGmapGoogleMapApiProvider.configure({v:"3.17",libraries:"places"})}]).run(["amMoment",function(amMoment){amMoment.changeLocale("es")}]).run(["$FB",function($FB){$FB.init("1414293935539684")}]),angular.module("core").constant("APP_COLORS",{primary:"#5d9cec",success:"#27c24c",info:"#23b7e5",warning:"#ff902b",danger:"#f05050",inverse:"#131e26",green:"#37bc9b",pink:"#f532e5",purple:"#7266ba",dark:"#3a3f51",yellow:"#fad732","gray-darker":"#232735","gray-dark":"#3a3f51",gray:"#dde6e9","gray-light":"#e4eaec","gray-lighter":"#edf1f2"}).constant("APP_MEDIAQUERY",{desktopLG:1200,desktop:992,tablet:768,mobile:480}).constant("APP_REQUIRES",{scripts:{modernizr:["/lib/modernizr/modernizr.js"],icons:["/lib/fontawesome/css/font-awesome.min.css","/lib/simple-line-icons/css/simple-line-icons.css"]},modules:[]}).constant("angularMomentConfig",{}),angular.module("core").config(["$stateProvider","$locationProvider","$urlRouterProvider","RouteHelpersProvider",function($stateProvider,$locationProvider,$urlRouterProvider,helper){$locationProvider.html5Mode(!1),$urlRouterProvider.otherwise("/home"),$stateProvider.state("app",{"abstract":!0,template:'<div data-ui-view autoscroll="false" ng-class="app.viewAnimation" class="content-wrapper"></div>',resolve:helper.resolveFor("modernizr","icons")}).state("app.home",{url:"/home",templateUrl:"modules/core/views/home.client.view.html"}).state("app.timeline",{url:"/timeline",templateUrl:"modules/core/views/timeline.client.view.html"})}]),angular.module("core").controller("AppController",["$rootScope","$scope","$state","$translate","$window","$localStorage","$timeout","toggleStateService","colors","browser","cfpLoadingBar","Authentication",function($rootScope,$scope,$state,$translate,$window,$localStorage,$timeout,toggle,colors,browser,cfpLoadingBar,Authentication){$scope.authentication=Authentication;var thBar;$rootScope.$on("$stateChangeStart",function(){$(".wrapper > section").length&&(thBar=$timeout(function(){cfpLoadingBar.start()},0))}),$rootScope.$on("$stateChangeSuccess",function(event){event.targetScope.$watch("$viewContentLoaded",function(){$timeout.cancel(thBar),cfpLoadingBar.complete()})}),$rootScope.$on("$stateNotFound",function(event,unfoundState){console.log(unfoundState.to),console.log(unfoundState.toParams),console.log(unfoundState.options)}),$rootScope.$on("$stateChangeError",function(event,toState,toParams,fromState,fromParams,error){console.log(error)}),$rootScope.$on("$stateChangeSuccess",function(){$window.scrollTo(0,0),$rootScope.currTitle=$state.current.title}),$rootScope.currTitle=$state.current.title,$rootScope.pageTitle=function(){return $rootScope.app.name+" - "+($rootScope.currTitle||$rootScope.app.description)},$rootScope.$watch("app.layout.isCollapsed",function(newValue){newValue===!1&&$rootScope.$broadcast("closeSidebarMenu")}),angular.isDefined($localStorage.layout)?$scope.app.layout=$localStorage.layout:$localStorage.layout=$scope.app.layout,$rootScope.$watch("app.layout",function(){$localStorage.layout=$scope.app.layout},!0),$scope.colorByName=colors.byName,$scope.language={listIsOpen:!1,available:{en:"English",es_AR:"Español"},init:function(){var proposedLanguage=$translate.proposedLanguage()||$translate.use(),preferredLanguage=$translate.preferredLanguage();$scope.language.selected=$scope.language.available[proposedLanguage||preferredLanguage]},set:function(localeId){$translate.use(localeId),$scope.language.selected=$scope.language.available[localeId],$scope.language.listIsOpen=!$scope.language.listIsOpen}},$scope.language.init(),toggle.restoreState($(document.body)),$timeout(function(){$rootScope.mainViewAnimation=$rootScope.app.viewAnimation}),$rootScope.cancel=function($event){$event.stopPropagation()},$scope.myInterval=5e3,$scope.slides=[{image:"modules/core/img/slides/slide1.jpg",title:"title 1",text:"text 1"},{image:"modules/core/img/slides/slide2.jpg",title:"title 2",text:"text 2"},{image:"modules/core/img/slides/slide3.jpg",title:"title 3",text:"text 3"}]}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","$location","Authentication",function($scope,$location,Authentication){$scope.authentication=Authentication,$scope.checkAuthentication=function(){if($scope.authentication&&$scope.authentication.user._id){console.log($location);var currentLocation=$location.path();"/pets"!=currentLocation&&$location.path("/pets")}}}]),angular.module("core").controller("SidebarController",["$rootScope","$scope","$state","Authentication","Menus","Utils",function($rootScope,$scope,$state,Authentication,Menus,Utils){function closeAllBut(index){index+="";for(var i in collapseList)(0>index||index.indexOf(i)<0)&&(collapseList[i]=!0)}$scope.authentication=Authentication,$scope.menu=Menus.getMenu("sidebar");var collapseList=[];$rootScope.$watch("app.layout.asideHover",function(oldVal,newVal){newVal===!1&&oldVal===!0&&closeAllBut(-1)});var isActive=function(item){if(item){if(item.sref&&"#"!=item.sref)return $state.is(item.sref)||$state.includes(item.sref);var foundActive=!1;return angular.forEach(item.submenu,function(value){isActive(value)&&(foundActive=!0)}),foundActive}};$scope.getMenuItemPropClasses=function(item){return(item.heading?"nav-heading":"")+(isActive(item)?" active":"")},$scope.addCollapse=function($index,item){collapseList[$index]=$rootScope.app.layout.asideHover?!0:!isActive(item)},$scope.isCollapse=function($index){return collapseList[$index]},$scope.toggleCollapse=function($index,isParentItem){return Utils.isSidebarCollapsed()||$rootScope.app.layout.asideHover?!0:(angular.isDefined(collapseList[$index])?(collapseList[$index]=!collapseList[$index],closeAllBut($index)):isParentItem&&closeAllBut(-1),!0)}}]),angular.module("core").controller("TimelineController",["$scope",function(){}]),angular.module("core").directive("fbPagePlugin",[function(){return{templateUrl:"/modules/core/views/partials/fb-page-plugin.client.view.html",restrict:"E",link:function(){}}}]),angular.module("core").directive("searchOpen",["navSearch",function(navSearch){return{restrict:"A",controller:["$scope","$element",function($scope,$element){$element.on("click",function(e){e.stopPropagation()}).on("click",navSearch.toggle)}]}}]).directive("searchDismiss",["navSearch",function(navSearch){var inputSelector='.navbar-form input[type="text"]';return{restrict:"A",controller:["$scope","$element",function($scope,$element){$(inputSelector).on("click",function(e){e.stopPropagation()}).on("keyup",function(e){27==e.keyCode&&navSearch.dismiss()}),$(document).on("click",navSearch.dismiss),$element.on("click",function(e){e.stopPropagation()}).on("click",navSearch.dismiss)}]}}]),angular.module("core").directive("sidebar",["$rootScope","$window","Utils",function($rootScope,$window,Utils){function sidebarAddBackdrop(){var $backdrop=$("<div/>",{"class":"dropdown-backdrop"});$backdrop.insertAfter(".aside-inner").on("click mouseenter",function(){removeFloatingNav()})}function toggleTouchItem($element){$element.siblings("li").removeClass("open").end().toggleClass("open")}function toggleMenuItem($listItem){removeFloatingNav();var ul=$listItem.children("ul");if(!ul.length)return $();if($listItem.hasClass("open"))return toggleTouchItem($listItem),$();var $aside=$(".aside"),$asideInner=$(".aside-inner"),mar=parseInt($asideInner.css("padding-top"),0)+parseInt($aside.css("padding-top"),0),subNav=ul.clone().appendTo($aside);toggleTouchItem($listItem);var itemTop=$listItem.position().top+mar-$sidebar.scrollTop(),vwHeight=$win.height();return subNav.addClass("nav-floating").css({position:$scope.app.layout.isFixed?"fixed":"absolute",top:itemTop,bottom:subNav.outerHeight(!0)+itemTop>vwHeight?0:"auto"}),subNav.on("mouseleave",function(){toggleTouchItem($listItem),subNav.remove()}),subNav}function removeFloatingNav(){$(".dropdown-backdrop").remove(),$(".sidebar-subnav.nav-floating").remove(),$(".sidebar li.open").removeClass("open")}var $scope,$sidebar,$win=$($window),$body=$("body"),currentState=$rootScope.$state.current.name;return{restrict:"EA",template:'<nav class="sidebar" ng-transclude></nav>',transclude:!0,replace:!0,link:function(scope,element){$scope=scope,$sidebar=element;var eventName=Utils.isTouch()?"click":"mouseenter",subNav=$();$sidebar.on(eventName,".nav > li",function(){(Utils.isSidebarCollapsed()||$rootScope.app.layout.asideHover)&&(subNav.trigger("mouseleave"),subNav=toggleMenuItem($(this)),sidebarAddBackdrop())}),scope.$on("closeSidebarMenu",function(){removeFloatingNav()}),$win.on("resize",function(){Utils.isMobile()||$body.removeClass("aside-toggled")}),$rootScope.$on("$stateChangeStart",function(event,toState){currentState=toState.name,$("body.aside-toggled").removeClass("aside-toggled"),$rootScope.$broadcast("closeSidebarMenu")})}}}]),angular.module("core").directive("simpleDateInput",[function(){return{templateUrl:"modules/core/views/partials/simple-date-input.client.view.html",scope:{date:"="},restrict:"E",link:function(scope){return scope.today=function(){$scope.yearOfBirth=new Date},scope.clear=function(){scope.yearOfBirth=null},scope.toggleMin=function(){scope.minDate=scope.minDate?null:"01/01/1970"},scope.toggleMin(),scope.open=function($event){$event.preventDefault(),$event.stopPropagation(),scope.opened=!0},scope.dateOptions={formatYear:"yyyy",startingDay:1},scope.formats=["dd/MM/yyyy","dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate"],scope.format=scope.formats[0],!1}}}]),angular.module("core").directive("toggleState",["toggleStateService",function(toggle){return{restrict:"A",link:function(scope,element,attrs){var $body=$("body");$(element).on("click",function(e){e.preventDefault();var classname=attrs.toggleState;classname&&($body.hasClass(classname)?($body.removeClass(classname),attrs.noPersist||toggle.removeState(classname)):($body.addClass(classname),attrs.noPersist||toggle.addState(classname)))})}}}]),angular.module("core").service("browser",function(){var matched,browser,uaMatch=function(ua){ua=ua.toLowerCase();var match=/(opr)[\/]([\w.]+)/.exec(ua)||/(chrome)[ \/]([\w.]+)/.exec(ua)||/(version)[ \/]([\w.]+).*(safari)[ \/]([\w.]+)/.exec(ua)||/(webkit)[ \/]([\w.]+)/.exec(ua)||/(opera)(?:.*version|)[ \/]([\w.]+)/.exec(ua)||/(msie) ([\w.]+)/.exec(ua)||ua.indexOf("trident")>=0&&/(rv)(?::| )([\w.]+)/.exec(ua)||ua.indexOf("compatible")<0&&/(mozilla)(?:.*? rv:([\w.]+)|)/.exec(ua)||[],platform_match=/(ipad)/.exec(ua)||/(iphone)/.exec(ua)||/(android)/.exec(ua)||/(windows phone)/.exec(ua)||/(win)/.exec(ua)||/(mac)/.exec(ua)||/(linux)/.exec(ua)||/(cros)/i.exec(ua)||[];return{browser:match[3]||match[1]||"",version:match[2]||"0",platform:platform_match[0]||""}};if(matched=uaMatch(window.navigator.userAgent),browser={},matched.browser&&(browser[matched.browser]=!0,browser.version=matched.version,browser.versionNumber=parseInt(matched.version)),matched.platform&&(browser[matched.platform]=!0),(browser.android||browser.ipad||browser.iphone||browser["windows phone"])&&(browser.mobile=!0),(browser.cros||browser.mac||browser.linux||browser.win)&&(browser.desktop=!0),(browser.chrome||browser.opr||browser.safari)&&(browser.webkit=!0),browser.rv){var ie="msie";matched.browser=ie,browser[ie]=!0}if(browser.opr){var opera="opera";matched.browser=opera,browser[opera]=!0}if(browser.safari&&browser.android){var android="android";matched.browser=android,browser[android]=!0}return browser.name=matched.browser,browser.platform=matched.platform,browser}),angular.module("core").factory("colors",["APP_COLORS",function(colors){return{byName:function(name){return colors[name]||"#fff"}}}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position,iconClass,translateKey,alert){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender,iconClass:iconClass||"fa fa-file-o",translate:translateKey,alert:alert}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar"),this.addMenu("sidebar")}]),angular.module("core").service("navSearch",function(){var navbarFormSelector="form.navbar-form";return{toggle:function(){var navbarForm=$(navbarFormSelector);navbarForm.toggleClass("open");var isOpen=navbarForm.hasClass("open");navbarForm.find("input")[isOpen?"focus":"blur"]()},dismiss:function(){$(navbarFormSelector).removeClass("open").find('input[type="text"]').blur().val("")}}}),angular.module("core").provider("RouteHelpers",["APP_REQUIRES",function(appRequires){this.basepath=function(uri){return"app/views/"+uri},this.resolveFor=function(){var _args=arguments;return{deps:["$ocLazyLoad","$q",function($ocLL,$q){function andThen(_arg){return promise.then("function"==typeof _arg?_arg:function(){var whatToLoad=getRequired(_arg);return whatToLoad?$ocLL.load(whatToLoad):$.error("Route resolve: Bad resource name ["+_arg+"]")})}function getRequired(name){if(appRequires.modules)for(var m in appRequires.modules)if(appRequires.modules[m].name&&appRequires.modules[m].name===name)return appRequires.modules[m];return appRequires.scripts&&appRequires.scripts[name]}for(var promise=$q.when(1),i=0,len=_args.length;len>i;i++)promise=andThen(_args[i]);return promise}]}},this.$get=function(){}}]),angular.module("core").service("toggleStateService",["$rootScope",function($rootScope){var storageKeyName="toggleState",WordChecker={hasWord:function(phrase,word){return new RegExp("(^|\\s)"+word+"(\\s|$)").test(phrase)},addWord:function(phrase,word){return this.hasWord(phrase,word)?void 0:phrase+(phrase?" ":"")+word},removeWord:function(phrase,word){return this.hasWord(phrase,word)?phrase.replace(new RegExp("(^|\\s)*"+word+"(\\s|$)*","g"),""):void 0}};return{addState:function(classname){var data=angular.fromJson($rootScope.$storage[storageKeyName]);data=data?WordChecker.addWord(data,classname):classname,$rootScope.$storage[storageKeyName]=angular.toJson(data)},removeState:function(classname){var data=$rootScope.$storage[storageKeyName];data&&(data=WordChecker.removeWord(data,classname),$rootScope.$storage[storageKeyName]=angular.toJson(data))},restoreState:function($elem){var data=angular.fromJson($rootScope.$storage[storageKeyName]);data&&$elem.addClass(data)}}}]),angular.module("core").service("Utils",["$window","APP_MEDIAQUERY",function($window,APP_MEDIAQUERY){var $html=angular.element("html"),$win=angular.element($window),$body=angular.element("body");return{support:{transition:function(){var transitionEnd=function(){var name,element=document.body||document.documentElement,transEndEventNames={WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",OTransition:"oTransitionEnd otransitionend",transition:"transitionend"};for(name in transEndEventNames)if(void 0!==element.style[name])return transEndEventNames[name]}();return transitionEnd&&{end:transitionEnd}}(),animation:function(){var animationEnd=function(){var name,element=document.body||document.documentElement,animEndEventNames={WebkitAnimation:"webkitAnimationEnd",MozAnimation:"animationend",OAnimation:"oAnimationEnd oanimationend",animation:"animationend"};for(name in animEndEventNames)if(void 0!==element.style[name])return animEndEventNames[name]}();return animationEnd&&{end:animationEnd}}(),requestAnimationFrame:window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.msRequestAnimationFrame||window.oRequestAnimationFrame||function(callback){window.setTimeout(callback,1e3/60)},touch:"ontouchstart"in window&&navigator.userAgent.toLowerCase().match(/mobile|tablet/)||window.DocumentTouch&&document instanceof window.DocumentTouch||window.navigator.msPointerEnabled&&window.navigator.msMaxTouchPoints>0||window.navigator.pointerEnabled&&window.navigator.maxTouchPoints>0||!1,mutationobserver:window.MutationObserver||window.WebKitMutationObserver||window.MozMutationObserver||null},isInView:function(element,options){var $element=$(element);if(!$element.is(":visible"))return!1;var window_left=$win.scrollLeft(),window_top=$win.scrollTop(),offset=$element.offset(),left=offset.left,top=offset.top;return options=$.extend({topoffset:0,leftoffset:0},options),top+$element.height()>=window_top&&top-options.topoffset<=window_top+$win.height()&&left+$element.width()>=window_left&&left-options.leftoffset<=window_left+$win.width()?!0:!1},langdirection:"rtl"==$html.attr("dir")?"right":"left",isTouch:function(){return $html.hasClass("touch")},isSidebarCollapsed:function(){return $body.hasClass("aside-collapsed")},isSidebarToggled:function(){return $body.hasClass("aside-toggled")},isMobile:function(){return $win.width()<APP_MEDIAQUERY.tablet}}}]),angular.module("events").run(["Menus",function(Menus){Menus.addMenuItem("sidebar","Eventos","events","dropdown","/events(/create)?",!1,null,null,"fa fa-calendar")}]),angular.module("events").config(["$stateProvider",function($stateProvider){$stateProvider.state("app.listEvents",{url:"/events",templateUrl:"modules/events/views/list-events.client.view.html"}).state("app.createEvent",{url:"/events/create",templateUrl:"modules/events/views/create-event.client.view.html"}).state("app.viewEvent",{url:"/events/:eventId",templateUrl:"modules/events/views/view-event.client.view.html"}).state("app.editEvent",{url:"/events/:eventId/edit",templateUrl:"modules/events/views/edit-event.client.view.html"})}]),angular.module("events").controller("EventsController",["$scope","$stateParams","$location","Authentication","Upload","Events",function($scope,$stateParams,$location,Authentication,Upload,Events){$scope.authentication=Authentication,$scope.create=function(){var event=new Events({title:this.title,image:this.image,date:this.date,content:this.content});$scope.formBusy=!0,Upload.parse(event).then(function(){event.$save(function(response){$location.path("events/"+response._id),$scope.title="",$scope.image="",$scope.content="",$scope.date=""},function(errorResponse){$scope.formBusy=!1,$scope.error=errorResponse.data.message})})},$scope.remove=function(event){if(event){event.$remove();for(var i in $scope.events)$scope.events[i]===event&&$scope.events.splice(i,1)}else $scope.event.$remove(function(){$location.path("events")})},$scope.update=function(){var event=$scope.event;event.$update(function(){$location.path("events/"+event._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.events=Events.query()},$scope.findOne=function(){$scope.event=Events.get({eventId:$stateParams.eventId})},$scope.today=function(){$scope.yearOfBirth=new Date},$scope.clear=function(){$scope.yearOfBirth=null},$scope.disabled=function(){},$scope.toggleMin=function(){$scope.minDate=$scope.minDate?null:"01/01/1970"},$scope.toggleMin(),$scope.open=function($event){$event.preventDefault(),$event.stopPropagation(),$scope.opened=!0},$scope.dateOptions={linkFormat:"yyyy-mm-dd hh:ii",pickTime:!0,pick12HourFormat:!0},$scope.formats=["dd/MM/yyyy","dd-MMMM-yyyy","yyyy/MM/dd","dd.MM.yyyy","shortDate","dd-MM-yyyy HH:mm:ss","dd MM yyyy - hh:ii"],$scope.format=$scope.formats[6]}]),angular.module("events").factory("Events",["$resource",function($resource){return $resource("events/:eventId",{eventId:"@_id"},{update:{method:"PUT"}})}]),angular.module("faqs").run(["Menus",function(Menus){Menus.addMenuItem("sidebar","Preguntas frecuentes","faqs","dropdown","/faqs(/create)?",!0,null,null,"icon-info")}]),angular.module("faqs").config(["$stateProvider",function($stateProvider){$stateProvider.state("app.listFaqs",{url:"/faqs",templateUrl:"modules/faqs/views/list-faqs.client.view.html"}).state("app.createFaq",{
url:"/faqs/create",templateUrl:"modules/faqs/views/create-faq.client.view.html"}).state("app.viewFaq",{url:"/faqs/:faqId",templateUrl:"modules/faqs/views/view-faq.client.view.html"}).state("app.editFaq",{url:"/faqs/:faqId/edit",templateUrl:"modules/faqs/views/edit-faq.client.view.html"})}]),angular.module("faqs").controller("FaqsController",["$scope","$stateParams","$location","Authentication","Faqs",function($scope,$stateParams,$location,Authentication,Faqs){$scope.authentication=Authentication,$scope.create=function(){var faq=new Faqs({title:this.title,content:this.content});faq.$save(function(response){$location.path("faqs/"+response._id),$scope.title="",$scope.content=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(faq){if(faq){faq.$remove();for(var i in $scope.faqs)$scope.faqs[i]===faq&&$scope.faqs.splice(i,1)}else $scope.faq.$remove(function(){$location.path("faqs")})},$scope.update=function(){var faq=$scope.faq;faq.$update(function(){$location.path("faqs/"+faq._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.faqs=Faqs.query()},$scope.findOne=function(){$scope.faq=Faqs.get({faqId:$stateParams.faqId})}}]),angular.module("faqs").factory("Faqs",["$resource",function($resource){return $resource("faqs/:faqId",{faqId:"@_id"},{update:{method:"PUT"}})}]),angular.module("imageuploaders").config(["$stateProvider",function($stateProvider){$stateProvider.state("listImageuploaders",{url:"/imageuploaders",templateUrl:"modules/imageuploaders/views/list-imageuploaders.client.view.html"}).state("createImageuploader",{url:"/imageuploaders/create",templateUrl:"modules/imageuploaders/views/create-imageuploader.client.view.html"}).state("viewImageuploader",{url:"/imageuploaders/:imageuploaderId",templateUrl:"modules/imageuploaders/views/view-imageuploader.client.view.html"}).state("editImageuploader",{url:"/imageuploaders/:imageuploaderId/edit",templateUrl:"modules/imageuploaders/views/edit-imageuploader.client.view.html"})}]),angular.module("imageuploaders").controller("ImageuploadersController",["$scope","$stateParams","$location","Authentication","Upload","$http",function($scope,$stateParams,$location,Authentication){$scope.authentication=Authentication}]).directive("fileread",[function(){return{scope:{fileread:"="},link:function(scope,element){element.bind("change",function(changeEvent){scope.$apply(function(){scope.fileread=changeEvent.target.files[0]})})}}}]),angular.module("imageuploaders").filter("cloudinaryProfile",[function(){return function(input){if(input){var res=input.split("/upload/");return input=res[0]+"/upload/w_150,h_150,c_thumb/"+res[1]}}}]).filter("cloudinaryProfileBlured",[function(){return function(input){if(input){var res=input.split("/upload/");return input=res[0]+"/upload/w_250,h_250,c_thumb,e_blur:500/"+res[1]}}}]),angular.module("imageuploaders").factory("Upload",["$window","$q","Restangular",function($window,$q,Restangular){return{parse:function(fields){var result=$q.defer(),requests=[],that=this;return angular.forEach(fields,function(fieldData,field){var data,deferred=$q.defer();fieldData instanceof $window.File?(requests.push(deferred.promise),data=new FormData,data.append("file",fieldData),fieldData.imageProvider&&data.append("imageProvider",fieldData.imageProvider),Restangular.one("upload").withHttpConfig({transformRequest:angular.identity}).customPOST(data,null,{},{"Content-Type":void 0}).then(function(file){fields[field]=file.url,deferred.resolve()})):null!==fieldData&&"object"==typeof fieldData&&(requests.push(deferred.promise),that.parse(fields[field]).then(function(){deferred.resolve()}))}),$q.all(requests).then(function(){result.resolve()}),result.promise}}}]),angular.module("issues").config(["$stateProvider",function($stateProvider){$stateProvider.state("app.listIssues",{url:"/issues",templateUrl:"modules/issues/views/list-issues.client.view.html"}).state("app.createIssue",{url:"/issues/create",templateUrl:"modules/issues/views/create-issue.client.view.html"}).state("app.viewIssue",{url:"/issues/:issueId",templateUrl:"modules/issues/views/view-issue.client.view.html"}).state("app.editIssue",{url:"/issues/:issueId/edit",templateUrl:"modules/issues/views/edit-issue.client.view.html"})}]),angular.module("issues").controller("IssuesController",["$scope","$stateParams","$location","Authentication","Issues","Upload",function($scope,$stateParams,$location,Authentication,Issues,Upload){$scope.authentication=Authentication,$scope.create=function(){var issue=new Issues({title:this.title,image:this.image,description:this.description});$scope.formBusy=!0,Upload.parse(issue).then(function(){issue.$save(function(response){$location.path("issues/"+response._id),$scope.title="",$scope.image="",$scope.description=""},function(errorResponse){$scope.formBusy=!1,$scope.error=errorResponse.data.message})})},$scope.remove=function(issue){if(issue){issue.$remove();for(var i in $scope.issues)$scope.issues[i]===issue&&$scope.issues.splice(i,1)}else $scope.issue.$remove(function(){$location.path("issues")})},$scope.update=function(){var issue=$scope.issue;$scope.formBusy=!0,issue.$update(function(){$location.path("issues/"+issue._id)},function(errorResponse){$scope.formBusy=!1,$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.issues=Issues.query()},$scope.findOne=function(){$scope.issue=Issues.get({issueId:$stateParams.issueId})}}]),angular.module("issues").factory("Issues",["$resource",function($resource){return $resource("issues/:issueId",{issueId:"@_id"},{update:{method:"PUT"}})}]),angular.module("notifications").config(["$stateProvider",function($stateProvider){$stateProvider.state("app.listNotifications",{url:"/notifications",templateUrl:"modules/notifications/views/list-notifications.client.view.html"}).state("app.createNotification",{url:"/notifications/create",templateUrl:"modules/notifications/views/create-notification.client.view.html"}).state("app.viewNotification",{url:"/notifications/:notificationId",templateUrl:"modules/notifications/views/view-notification.client.view.html"}).state("app.editNotification",{url:"/notifications/:notificationId/edit",templateUrl:"modules/notifications/views/edit-notification.client.view.html"})}]),angular.module("notifications").controller("NotificationsController",["$scope","$stateParams","$location","Authentication","Notifications",function($scope,$stateParams,$location,Authentication,Notifications){$scope.authentication=Authentication,$scope.create=function(){var notification=new Notifications({name:this.name});notification.$save(function(response){$location.path("notifications/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(notification){if(notification){notification.$remove();for(var i in $scope.notifications)$scope.notifications[i]===notification&&$scope.notifications.splice(i,1)}else $scope.notification.$remove(function(){$location.path("notifications")})},$scope.update=function(){var notification=$scope.notification;notification.$update(function(){$location.path("notifications/"+notification._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.notifications=Notifications.query()},$scope.findOne=function(){$scope.notification=Notifications.get({notificationId:$stateParams.notificationId})}}]),angular.module("notifications").factory("Notifications",["$resource",function($resource){return $resource("notifications/:notificationId",{notificationId:"@_id"},{update:{method:"PUT"}})}]),angular.module("petgenres").config(["$stateProvider",function($stateProvider){$stateProvider.state("listPetgenres",{url:"/petgenres",templateUrl:"modules/petgenres/views/list-petgenres.client.view.html"}).state("createPetgenre",{url:"/petgenres/create",templateUrl:"modules/petgenres/views/create-petgenre.client.view.html"}).state("viewPetgenre",{url:"/petgenres/:petgenreId",templateUrl:"modules/petgenres/views/view-petgenre.client.view.html"}).state("editPetgenre",{url:"/petgenres/:petgenreId/edit",templateUrl:"modules/petgenres/views/edit-petgenre.client.view.html"})}]),angular.module("petgenres").controller("PetgenresController",["$scope","$stateParams","$location","Authentication","Petgenres",function($scope,$stateParams,$location,Authentication,Petgenres){$scope.authentication=Authentication,$scope.create=function(){var petgenre=new Petgenres({name:this.name});petgenre.$save(function(response){$location.path("petgenres/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(petgenre){if(petgenre){petgenre.$remove();for(var i in $scope.petgenres)$scope.petgenres[i]===petgenre&&$scope.petgenres.splice(i,1)}else $scope.petgenre.$remove(function(){$location.path("petgenres")})},$scope.update=function(){var petgenre=$scope.petgenre;petgenre.$update(function(){$location.path("petgenres/"+petgenre._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.petgenres=Petgenres.query()},$scope.findOne=function(){$scope.petgenre=Petgenres.get({petgenreId:$stateParams.petgenreId})}}]),angular.module("petgenres").directive("petGenreSelector",["Petgenres","$localStorage",function(Petgenres,$localStorage){return{templateUrl:"/modules/petgenres/views/partials/pet-genre-selector.html",restrict:"E",replace:!0,link:function(scope){scope.$storage=$localStorage,scope.getGenres=function(){console.log("getGenres"),scope.$storage.petgenres&&scope.$storage.petgenres.length?(scope.petgenres=scope.$storage.petgenres,console.log("$localStorage",scope.petgenres)):(scope.petgenres=Petgenres.query(),scope.$storage.petgenres=scope.petgenres,console.log("else",scope.petgenres))},scope.getGenres()}}}]),angular.module("petgenres").factory("Petgenres",["$resource",function($resource){return $resource("petgenres/:petgenreId",{petgenreId:"@_id"},{update:{method:"PUT"}})}]),angular.module("pets").run(["Menus",function(Menus){Menus.addMenuItem("sidebar","Mascotas","pets","dropdown","/pets(/create)?",!1,null,null,"fa fa-paw"),Menus.addSubMenuItem("sidebar","pets","Perdidos","pets/perdidos",!1,null,null,"icon-alert"),Menus.addSubMenuItem("sidebar","pets","Adoptar","pets/adopcion",!1,null,null,"icon-heart"),Menus.addSubMenuItem("sidebar","pets","Nueva Mascota","pets/create",!1,null,null,"fa-plus-circle")}]),angular.module("pets").config(["$stateProvider",function($stateProvider){$stateProvider.state("qr",{url:"/qr",templateUrl:"modules/pets/views/qr.client.view.html"}).state("app.listPets",{url:"/pets",templateUrl:"modules/pets/views/list-pets.client.view.html",controller:"PetsController"}).state("app.listPetsAdoption",{url:"/pets/adopcion",templateUrl:"modules/pets/views/list-pets-adoption.client.view.html",controller:"PetsController"}).state("app.listPetsMissing",{url:"/pets/perdidos",templateUrl:"modules/pets/views/list-pets-missing.client.view.html",controller:"PetsController"}).state("app.createPet",{url:"/pets/create",templateUrl:"modules/pets/views/create-pet.client.view.html"}).state("app.viewPet",{url:"/pet/:petSlug",templateUrl:"modules/pets/views/view-pet.client.view.html",controller:"PetsController"}).state("app.viewPets",{url:"/pets/:petId",templateUrl:"modules/pets/views/view-pets.client.view.html",controller:"PetsController"}).state("app.editPet",{url:"/pets/:petId/edit",templateUrl:"modules/pets/views/edit-pet.client.view.html"})}]),angular.module("pets").controller("PetsController",["$scope","$resource","$stateParams","$location","Authentication","Pets","Upload","geolocation","Notifications","$http","$timeout",function($scope,$resource,$stateParams,$location,Authentication,Pets,Upload,geolocation,Notifications,$http,$timeout){$scope.authentication=Authentication,$scope.step=1,$scope.$watch("step",function(step){3===step&&""!==$scope.inviteUserEmail&&($scope.email=$scope.inviteUserEmail)}),$scope.create=function(){var pet=new Pets({name:this.name,picture:this.picture,slug:this.slug,color:this.color,breed:this.breed,isMissing:this.isMissing,genre:this.genre,yearOfBirth:this.yearOfBirth,description:this.description,neutered:this.neutered,email:this.email,address:this.address,isPrivate:this.isPrivate,isAdoption:this.isAdoption,tel1:this.tel1,tel2:this.tel2,coords:this.coords});$scope.formBusy=!0,Upload.parse(pet).then(function(){pet.$save(function(response){$location.path("pet/"+response.slug),$scope.name="",$scope.picture="",$scope.slug="",$scope.color="",$scope.breed="",$scope.isMissing="",$scope.neutered="",$scope.email="",$scope.address="",$scope.isPrivate="",$scope.isAdoption="",$scope.tel1="",$scope.tel2="",$scope.coords=""},function(errorResponse){$scope.formBusy=!1,$scope.error=errorResponse.data.message})})},$scope.remove=function(pet){if(pet){pet.$remove();for(var i in $scope.pets)$scope.pets[i]===pet&&$scope.pets.splice(i,1)}else $scope.pet.$remove(function(){$location.path("pets")})},$scope.update=function(){$scope.formBusy=!0;var pet=$scope.pet;delete pet.$promise,delete pet.$resolved,Upload.parse(pet).then(function(){pet.$update(function(){$location.path("pet/"+pet.slug)},function(errorResponse){$scope.error=errorResponse.data.message})})},$scope.find=function(){$scope.pets=Pets.query()},$scope.findAdoptions=function(){$http.get("/pets/adoption").success(function(data){$scope.pets=data}).error(function(){console.log("error loading adoption pets")})},$scope.findOne=function(){$scope.pet=Pets.get({petId:$stateParams.petId})},$scope.findOneBySlug=function(){var Pet=$resource("/pet/:petSlug",{petSlug:"@slug"});$scope.pet=Pet.get({petSlug:$stateParams.petSlug},function(){})},$scope.map={center:{latitude:40.1451,longitude:-99.668},zoom:4},$scope.map={center:{latitude:40.1451,longitude:-99.668},zoom:4},$scope.options={scrollwheel:!1},$scope.coordsUpdates=0,$scope.dynamicMoveCtr=0,$scope.marker={id:0,coords:{latitude:40.1451,longitude:-99.668},options:{draggable:!0},events:{dragend:function(marker){$log.log("marker dragend");var lat=marker.getPosition().lat(),lon=marker.getPosition().lng();$log.log(lat),$log.log(lon),$scope.marker.options={draggable:!0,labelContent:"lat: "+$scope.marker.coords.latitude+" lon: "+$scope.marker.coords.longitude,labelAnchor:"100 0",labelClass:"marker-labels"}}}},$scope.$watchCollection("marker.coords",function(newVal,oldVal){_.isEqual(newVal,oldVal)||$scope.coordsUpdates++}),$timeout(function(){$scope.marker.coords={latitude:42.1451,longitude:-100.668},$scope.dynamicMoveCtr++,$timeout(function(){$scope.marker.coords={latitude:43.1451,longitude:-102.668},$scope.dynamicMoveCtr++},2e3)},1e3);var events={places_changed:function(searchBox){var places=searchBox.getPlaces(),newLat=places[0].geometry.location.lat(),newLong=places[0].geometry.location.lng();$scope.map.center={latitude:newLat,longitude:newLong},$scope.marker.coords={latitude:newLat,longitude:newLong},$scope.address=places[0].formatted_address}};$scope.searchbox={template:"searchbox.tpl.html",events:events},$scope.setGeoLocation=function(){$scope.map={center:$scope.currentCoords,zoom:18},$scope.marker.coords=$scope.currentCoords},$scope.getGeoLocalization=function(){geolocation.getLocation().then(function(data){$scope.currentCoords={latitude:data.coords.latitude,longitude:data.coords.longitude},$scope.setGeoLocation()})},$scope.sendScanNotif=function(){var petSendNotification=!0;if(petSendNotification){var notification=new Notifications({title:$scope.pet.name+" fue scaneado",pet:$scope.pet._id,geoLocation:$scope.coords,to:$scope.pet.user._id});notification.$save(function(response){console.log(response)},function(errorResponse){$scope.error=errorResponse.data.message})}},$scope.setPetMissing=function(value){$http.put("pets/"+$scope.pet._id+"/missing",{isMissing:value}).success(function(data){console.log(data),$scope.pet.isMissing=data.isMissing}).error(function(data){console.log(data),$scope.error=data})},$scope.findMissing=function(){console.log("missing"),$http.get("/pets/missing").success(function(data){$scope.pets=data}).error(function(){console.log("error loading missing pets")})}}]),angular.module("pets").directive("petList",[function(){return{templateUrl:"modules/pets/views/partials/pet-list.client.view.html",restrict:"E",link:function(){}}}]),angular.module("pets").directive("petProfileView",[function(){return{templateUrl:"modules/pets/views/partials/pet-profile-view.client.view.html",restrict:"E",replace:!0,link:function(){}}}]),angular.module("pets").directive("qr",["$http",function($http){return{templateUrl:"/modules/pets/views/qr.client.view.html",restrict:"E",replace:!0,scope:{pet:"="},link:function(scope,element){element.bind("click",function(){var popupWin=window.open("","_blank","width=300,height=300");popupWin.document.open(),popupWin.document.write('<html><head></head><body onload="window.print()">'+element.html()+"</html>"),popupWin.document.close()}),scope.svg="",$http.get("/qr/"+scope.pet.slug).success(function(data){scope.svg=data}).error(function(){console.log("ERROR")})}}}]),function(angular){function printDirective(){function link(scope,element,attrs){element.on("click",function(){var elemToPrint=document.getElementById(attrs.printElementId);elemToPrint&&printElement(elemToPrint)}),window.onafterprint=function(){printSection.innerHTML=""}}function printElement(elem){var domClone=elem.cloneNode(!0);printSection.appendChild(domClone),window.print()}var printSection=document.getElementById("printSection");return printSection||(printSection=document.createElement("div"),printSection.id="printSection",document.body.appendChild(printSection)),{link:link,restrict:"A"}}angular.module("core").directive("ngPrint",[printDirective])}(window.angular),angular.module("pets").factory("Pets",["$resource",function($resource){return $resource("pets/:petId",{petId:"@_id"},{update:{method:"PUT"}})}]),angular.module("pettypes").config(["$stateProvider",function($stateProvider){$stateProvider.state("listPettypes",{url:"/pettypes",templateUrl:"modules/pettypes/views/list-pettypes.client.view.html"}).state("createPettype",{url:"/pettypes/create",templateUrl:"modules/pettypes/views/create-pettype.client.view.html"}).state("viewPettype",{url:"/pettypes/:pettypeId",templateUrl:"modules/pettypes/views/view-pettype.client.view.html"}).state("editPettype",{url:"/pettypes/:pettypeId/edit",templateUrl:"modules/pettypes/views/edit-pettype.client.view.html"})}]),angular.module("pettypes").controller("PettypesController",["$scope","$stateParams","$location","Authentication","Pettypes",function($scope,$stateParams,$location,Authentication,Pettypes){$scope.authentication=Authentication,$scope.create=function(){var pettype=new Pettypes({name:this.name});pettype.$save(function(response){$location.path("pettypes/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(pettype){if(pettype){pettype.$remove();for(var i in $scope.pettypes)$scope.pettypes[i]===pettype&&$scope.pettypes.splice(i,1)}else $scope.pettype.$remove(function(){$location.path("pettypes")})},$scope.update=function(){var pettype=$scope.pettype;pettype.$update(function(){$location.path("pettypes/"+pettype._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.pettypes=Pettypes.query()},$scope.findOne=function(){$scope.pettype=Pettypes.get({pettypeId:$stateParams.pettypeId})}}]),angular.module("petgenres").directive("petTypeSelector",["Pettypes","$localStorage",function(Pettypes,$localStorage){return{templateUrl:"/modules/pettypes/views/partials/pet-type-selector.html",restrict:"E",replace:!0,link:function(scope){scope.$storage=$localStorage,scope.getTypes=function(){console.log("getTypes"),scope.$storage.pettypes&&scope.$storage.pettypes.length?(scope.pettypes=scope.$storage.pettypes,console.log("$localStorage",scope.pettypes)):(scope.pettypes=Pettypes.query(),scope.$storage.pettypes=scope.pettypes,console.log("else",scope.pettypes))},scope.getTypes()}}}]),angular.module("pettypes").factory("Pettypes",["$resource",function($resource){return $resource("pettypes/:pettypeId",{pettypeId:"@_id"},{update:{method:"PUT"}})}]),angular.module("rescues").run(["Menus",function(Menus){Menus.addMenuItem("sidebar","Voluntarios","contacts/create","dropdown","/contacts(/create)?",!1,null,null,"fa fa-group")}]),angular.module("rescues").config(["$stateProvider",function($stateProvider){$stateProvider.state("app.listRescues",{url:"/rescues",templateUrl:"modules/rescues/views/list-rescues.client.view.html"}).state("app.createRescue",{url:"/rescues/create",templateUrl:"modules/rescues/views/create-rescue.client.view.html"}).state("app.viewRescue",{url:"/rescues/:rescueId",templateUrl:"modules/rescues/views/view-rescue.client.view.html"}).state("app.editRescue",{url:"/rescues/:rescueId/edit",templateUrl:"modules/rescues/views/edit-rescue.client.view.html"})}]),angular.module("rescues").controller("RescuesController",["$scope","$stateParams","$location","Authentication","Rescues",function($scope,$stateParams,$location,Authentication,Rescues){$scope.authentication=Authentication,$scope.create=function(){var rescue=new Rescues({name:this.name});rescue.$save(function(response){$location.path("rescues/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(rescue){if(rescue){rescue.$remove();for(var i in $scope.rescues)$scope.rescues[i]===rescue&&$scope.rescues.splice(i,1)}else $scope.rescue.$remove(function(){$location.path("rescues")})},$scope.update=function(){var rescue=$scope.rescue;rescue.$update(function(){$location.path("rescues/"+rescue._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.rescues=Rescues.query()},$scope.findOne=function(){$scope.rescue=Rescues.get({rescueId:$stateParams.rescueId})}}]),angular.module("rescues").factory("Rescues",["$resource",function($resource){return $resource("rescues/:rescueId",{rescueId:"@_id"},{update:{method:"PUT"}})}]),angular.module("roles").config(["$stateProvider",function($stateProvider){$stateProvider.state("app.listRoles",{url:"/roles",templateUrl:"modules/roles/views/list-roles.client.view.html"}).state("app.createRole",{url:"/roles/create",templateUrl:"modules/roles/views/create-role.client.view.html"}).state("app.viewRole",{url:"/roles/:roleId",templateUrl:"modules/roles/views/view-role.client.view.html"}).state("app.editRole",{url:"/roles/:roleId/edit",templateUrl:"modules/roles/views/edit-role.client.view.html"})}]),angular.module("roles").controller("RolesController",["$scope","$stateParams","$location","Authentication","Roles",function($scope,$stateParams,$location,Authentication,Roles){$scope.authentication=Authentication,$scope.create=function(){var role=new Roles({name:this.name});role.$save(function(response){$location.path("roles/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(role){if(role){role.$remove();for(var i in $scope.roles)$scope.roles[i]===role&&$scope.roles.splice(i,1)}else $scope.role.$remove(function(){$location.path("roles")})},$scope.update=function(){var role=$scope.role;role.$update(function(){$location.path("roles/"+role._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.roles=Roles.query()},$scope.findOne=function(){$scope.role=Roles.get({roleId:$stateParams.roleId})}}]),angular.module("roles").directive("roleUserSelector",["Roles","$localStorage",function(Petgenres,$localStorage){return{templateUrl:"/modules/roles/views/partials/role-user-selector.html",restrict:"E",replace:!0,link:function(scope){scope.$storage=$localStorage,scope.getRoleUsers=function(){console.log("roleUser"),scope.$storage.roleusers&&scope.$storage.roleusers.length?(scope.roleusers=scope.$storage.roleusers,console.log("$localStorage",scope.roleusers)):(scope.roleusers=Petgenres.query(),scope.$storage.roleusers=scope.roleusers,console.log("else",scope.roleusers))},scope.getRoleUsers()}}}]),angular.module("roles").factory("Roles",["$resource",function($resource){return $resource("roles/:roleId",{roleId:"@_id"},{update:{method:"PUT"}})}]),angular.module("shelters").run(["Menus",function(Menus){Menus.addMenuItem("sidebar","Refugios","contacts/create","dropdown","/contacts(/create)?",!1,null,null,"icon-pointer")}]),angular.module("shelters").config(["$stateProvider",function($stateProvider){$stateProvider.state("app.listShelters",{url:"/shelters",templateUrl:"modules/shelters/views/list-shelters.client.view.html"}).state("app.createShelter",{url:"/shelters/create",templateUrl:"modules/shelters/views/create-shelter.client.view.html"}).state("app.viewShelter",{url:"/shelters/:shelterId",templateUrl:"modules/shelters/views/view-shelter.client.view.html"}).state("app.editShelter",{url:"/shelters/:shelterId/edit",templateUrl:"modules/shelters/views/edit-shelter.client.view.html"})}]),angular.module("shelters").controller("SheltersController",["$scope","$stateParams","$location","Authentication","Shelters",function($scope,$stateParams,$location,Authentication,Shelters){$scope.authentication=Authentication,$scope.create=function(){var shelter=new Shelters({name:this.name});shelter.$save(function(response){$location.path("shelters/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(shelter){if(shelter){shelter.$remove();for(var i in $scope.shelters)$scope.shelters[i]===shelter&&$scope.shelters.splice(i,1)}else $scope.shelter.$remove(function(){$location.path("shelters")})},$scope.update=function(){var shelter=$scope.shelter;shelter.$update(function(){$location.path("shelters/"+shelter._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.shelters=Shelters.query()},$scope.findOne=function(){$scope.shelter=Shelters.get({shelterId:$stateParams.shelterId})}}]),angular.module("shelters").factory("Shelters",["$resource",function($resource){return $resource("shelters/:shelterId",{shelterId:"@_id"},{update:{method:"PUT"}})}]),angular.module("shops").run(["Menus",function(){}]),angular.module("shops").config(["$stateProvider",function($stateProvider){$stateProvider.state("app.listShops",{url:"/tienda",templateUrl:"modules/shops/views/list-shops.client.view.html"}).state("app.createShop",{url:"/tienda/create",templateUrl:"modules/shops/views/create-shop.client.view.html"}).state("app.viewShop",{url:"/tienda/:shopId",templateUrl:"modules/shops/views/view-shop.client.view.html"}).state("app.editShop",{url:"/tienda/:shopId/edit",templateUrl:"modules/shops/views/edit-shop.client.view.html"})}]),angular.module("shops").controller("ShopsController",["$scope","$stateParams","$location","Authentication","Shops",function($scope,$stateParams,$location,Authentication,Shops){$scope.authentication=Authentication,$scope.create=function(){var shop=new Shops({name:this.name});shop.$save(function(response){$location.path("shops/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(shop){if(shop){shop.$remove();for(var i in $scope.shops)$scope.shops[i]===shop&&$scope.shops.splice(i,1)}else $scope.shop.$remove(function(){$location.path("shops")})},$scope.update=function(){var shop=$scope.shop;shop.$update(function(){$location.path("shops/"+shop._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.shops=Shops.query()},$scope.findOne=function(){$scope.shop=Shops.get({shopId:$stateParams.shopId})}}]),angular.module("shops").factory("Shops",["$resource",function($resource){return $resource("shops/:shopId",{shopId:"@_id"},{update:{method:"PUT"}})}]),angular.module("trainers").run(["Menus",function(Menus){Menus.addMenuItem("sidebar","Entrenadores","contacts/create","dropdown","/contacts(/create)?",!1,null,null,"fa fa-book")}]),angular.module("trainers").config(["$stateProvider",function($stateProvider){$stateProvider.state("app.listTrainers",{url:"/trainers",templateUrl:"modules/trainers/views/list-trainers.client.view.html"}).state("app.createTrainer",{url:"/trainers/create",templateUrl:"modules/trainers/views/create-trainer.client.view.html"}).state("app.viewTrainer",{url:"/trainers/:trainerId",templateUrl:"modules/trainers/views/view-trainer.client.view.html"}).state("app.editTrainer",{url:"/trainers/:trainerId/edit",templateUrl:"modules/trainers/views/edit-trainer.client.view.html"})}]),angular.module("trainers").controller("TrainersController",["$scope","$stateParams","$location","Authentication","Trainers",function($scope,$stateParams,$location,Authentication,Trainers){$scope.authentication=Authentication,$scope.create=function(){var trainer=new Trainers({name:this.name});trainer.$save(function(response){$location.path("trainers/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(trainer){if(trainer){trainer.$remove();for(var i in $scope.trainers)$scope.trainers[i]===trainer&&$scope.trainers.splice(i,1)}else $scope.trainer.$remove(function(){$location.path("trainers")})},$scope.update=function(){var trainer=$scope.trainer;trainer.$update(function(){$location.path("trainers/"+trainer._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.trainers=Trainers.query()},$scope.findOne=function(){$scope.trainer=Trainers.get({trainerId:$stateParams.trainerId})}}]),angular.module("trainers").factory("Trainers",["$resource",function($resource){return $resource("trainers/:trainerId",{trainerId:"@_id"},{update:{method:"PUT"}})}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("app.profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("app.password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("app.accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("app.signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("app.signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("app.forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("app.reset-invalid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("app.reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("app.reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/pets")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/pets")}).error(function(response){$scope.error=response.message;

})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]),angular.module("vets").run(["Menus",function(Menus){Menus.addMenuItem("sidebar","Veterinarias","contacts/create","dropdown","/contacts(/create)?",!1,null,null,"fa fa-medkit")}]),angular.module("vets").config(["$stateProvider",function($stateProvider){$stateProvider.state("app.listVets",{url:"/vets",templateUrl:"modules/vets/views/list-vets.client.view.html"}).state("app.createVet",{url:"/vets/create",templateUrl:"modules/vets/views/create-vet.client.view.html"}).state("app.viewVet",{url:"/vets/:vetId",templateUrl:"modules/vets/views/view-vet.client.view.html"}).state("app.editVet",{url:"/vets/:vetId/edit",templateUrl:"modules/vets/views/edit-vet.client.view.html"})}]),angular.module("vets").controller("VetsController",["$scope","$stateParams","$location","Authentication","Vets",function($scope,$stateParams,$location,Authentication,Vets){$scope.authentication=Authentication,$scope.create=function(){var vet=new Vets({name:this.name});vet.$save(function(response){$location.path("vets/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(vet){if(vet){vet.$remove();for(var i in $scope.vets)$scope.vets[i]===vet&&$scope.vets.splice(i,1)}else $scope.vet.$remove(function(){$location.path("vets")})},$scope.update=function(){var vet=$scope.vet;vet.$update(function(){$location.path("vets/"+vet._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.vets=Vets.query()},$scope.findOne=function(){$scope.vet=Vets.get({vetId:$stateParams.vetId})}}]),angular.module("vets").factory("Vets",["$resource",function($resource){return $resource("vets/:vetId",{vetId:"@_id"},{update:{method:"PUT"}})}]);